# ctr-elastic_setup_1.service
# autogenerated by Podman 4.3.1
# Fri Jan 27 15:08:21 UTC 2023

[Unit]
Description=Podman ctr-elastic_setup_1.service
Documentation=man:podman-generate-systemd(1)
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers
BindsTo=pod-pod_elastic.service
After=pod-pod_elastic.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
TimeoutStopSec=70
ExecStartPre=/bin/rm \
	-f %t/%n.ctr-id
ExecStart=/usr/bin/podman run \
	--cidfile=%t/%n.ctr-id \
	--cgroups=no-conmon \
	--rm \
	--pod-id-file %t/pod-pod_elastic.pod-id \
	--sdnotify=conmon \
	--replace \
	--name=elastic_setup_1 \
	-d \
	--label io.podman.compose.config-hash=f44943e8c181d3955ae80ffbdb0b7600cf2e38913bf7927acd77da34a9f939ef \
	--label io.podman.compose.project=elastic \
	--label io.podman.compose.version=1.0.4 \
	--label PODMAN_SYSTEMD_UNIT=podman-compose@elastic.service \
	--label com.docker.compose.project=elastic \
	--label com.docker.compose.project.working_dir=/var/usrlocal/bin/elastic \
	--label com.docker.compose.project.config_files=container-compose.yml \
	--label com.docker.compose.container-number=1 \
	--label com.docker.compose.service=setup \
	-v elastic_certs:/usr/share/elasticsearch/config/certs \
	--net elastic_default \
	--network-alias setup \
	-u 0 \
	--healthcheck-command "/bin/sh -c '[ -f config/certs/es01/es01.crt ]'" \
	--healthcheck-interval 1s \
	--healthcheck-timeout 5s \
	--healthcheck-retries 120 docker.elastic.co/elasticsearch/elasticsearch:8.6.0 bash \
	-c "\n  if [ xDefense-Postal-Baggy6-Designer == x ]; then\n    echo \"Set the ELASTIC_PASSWORD environment variable in the .env file\";\n    exit 1;\n  elif [ xShut-Scratch-Jawed-Reversion4 == x ]; then\n    echo \"Set the KIBANA_PASSWORD environment variable in the .env file\";\n    exit 1;\n  fi;\n  if [ ! -f config/certs/ca.zip ]; then\n    echo \"Creating CA\";\n    bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;\n    unzip config/certs/ca.zip -d config/certs;\n  fi;\n  if [ ! -f config/certs/certs.zip ]; then\n    echo \"Creating certs\";\n    echo -ne \\\n    \"instances:\\n\"\\\n    \"  - name: es01\\n\"\\\n    \"    dns:\\n\"\\\n    \"      - es01\\n\"\\\n    \"      - localhost\\n\"\\\n    \"    ip:\\n\"\\\n    \"      - 127.0.0.1\\n\"\\\n    \"  - name: es02\\n\"\\\n    \"    dns:\\n\"\\\n    \"      - es02\\n\"\\\n    \"      - localhost\\n\"\\\n    \"    ip:\\n\"\\\n    \"      - 127.0.0.1\\n\"\\\n    \"  - name: es03\\n\"\\\n    \"    dns:\\n\"\\\n    \"      - es03\\n\"\\\n    \"      - localhost\\n\"\\\n    \"    ip:\\n\"\\\n    \"      - 127.0.0.1\\n\"\\\n    > config/certs/instances.yml;\n    bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;\n    unzip config/certs/certs.zip -d config/certs;\n  fi;\n  echo \"Setting file permissions\"\n  chown -R root:root config/certs;\n  find . -type d -exec chmod 750 \\{\\} \\;;\n  find . -type f -exec chmod 640 \\{\\} \\;;\n  echo \"Waiting for Elasticsearch availability\";\n  until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q \"missing authentication credentials\"; do sleep 30; done;\n  echo \"Setting kibana_system password\";\n  until curl -s -X POST --cacert config/certs/ca/ca.crt -u \"elastic:Defense-Postal-Baggy6-Designer\" -H \"Content-Type: application/json\" https://es01:9200/_security/user/kibana_system/_password -d \"{\\\"password\\\":\\\"Shut-Scratch-Jawed-Reversion4\\\"}\" | grep -q \"^{}\"; do sleep 10; done;\n  echo \"All done!\";\n"
ExecStop=/usr/bin/podman stop \
	--ignore -t 10 \
	--cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm \
	-f \
	--ignore -t 10 \
	--cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target

variant: fcos
version: 1.4.0
kernel_arguments:
  should_exist:
    # Attempt to disable power saving autosuspend
    - usbcore.autosuspend=-1
passwd:
  groups:
    - name: cctv
    - name: movies
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
    - name: steven
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
      groups:
        - wheel
        - cctv
        - movies
    - name: git
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
systemd:
  units:
    - name: motionplus.service
      enabled: true
      contents: |
        [Unit]
        Description=Motionplus Video Server
        After=network-online.target
        After=podman-secrets.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        # Create a volume with motionplus configuration with placeholder values replaced with podman secrets
        ExecStartPre=/bin/podman run --rm \
            --pull missing \
            --name motion-config-editor \
            --secret motion_camera1,type=env \
            --secret motion_camera2,type=env \
            --secret motion_camera3,type=env \
            --secret v4l2rtspserver_camera1_url,type=env \
            --secret v4l2rtspserver_camera2_url,type=env \
            --secret v4l2rtspserver_camera3_url,type=env \
            --device /dev/dri:/dev/dri \
            -v /var/usrlocal/etc/motion:/mnt/motion:Z \
            -v motionplus:/mnt/temp_config \
            -v /var/usrlocal/bin/motion_config_editor.sh:/bin/motion_config_editor.sh:Z \
            docker.io/bash:5.2.2 bash /bin/motion_config_editor.sh

        ExecStartPre=/usr/local/bin/check_podman_network.sh cameras
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --label "io.containers.autoupdate=registry" \
            --name motionplus \
            --net cameras \
            --network-alias cameras \
            --pull missing \
            -e TZ="America/New_York" \
            -v motionplus:/usr/local/etc/motionplus \
            -v /var/data/motionplus:/var/lib/motionplus:Z \
            -p 8080:8080 \
            --device /dev/dri:/dev/dri \
            docker.io/steve51516/motionplus:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/bin/podman volume rm motionplus

        [Install]
        WantedBy=multi-user.target

    # Entrypoint is replaced with bash -c bin/start_v4l2rtspserver.sh to allow use of podman secrets in entrypoint
    - name: v4l2rtspserver.service
      enabled: true
      contents: |
        [Unit]
        Description=V4L2 RTSP Server
        After=network.target
        Wants=network-online.target
        BindsTo=sys-devices-pci0000:00-0000:00:14.0-usb1-1\x2d2-1\x2d2.3-1\x2d2.3:1.0-video4linux-video0.device
        After=sys-devices-pci0000:00-0000:00:14.0-usb1-1\x2d2-1\x2d2.3-1\x2d2.3:1.0-video4linux-video0.device
        After=podman-secrets.service
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh cameras
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --label "io.containers.autoupdate=registry" \
            --name v4l2rtspserver \
            --net cameras \
            --network-alias cameras \
            --pull missing \
            --secret v4l2rtspserver,type=env,target=SECRET \
            --secret v4l2rtspserver_camera3_url,type=env,target=URL \
            --device /dev/usbcam0:/dev/video0 \
            --device /dev/snd:/dev/snd \
            --device /dev/dri:/dev/dri \
            -v /var/usrlocal/bin/start_v4l2rtspserver.sh:/usr/local/bin/start_v4l2rtspserver.sh \
            -p 8554:8554/tcp \
            -p 8554:8554/udp \
            --entrypoint "/bin/bash" \
            docker.io/mpromonet/v4l2rtspserver:latest-amd64 \
                -c "/usr/local/bin/start_v4l2rtspserver.sh"
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target
    
    - name: emby.service
      enabled: true
      contents: |
        [Unit]
        Description=Emby Media Server
        After=network-online.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name emby \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            --device /dev/dri:/dev/dri \
            -v emby_config:/config \
            -v /var/data/emby/Movies:/mnt/Movies:Z \
            -v /var/data/emby/TV:/mnt/TV:Z \
            -v /var/data/emby/Mixed:/mnt/Mixed:Z \
            -p 8096:8096 \
            -e UID=1003 \
            -e GID=1002 \
            -e GIDLIST=100 \
            docker.io/linuxserver/emby:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: plex.service
      enabled: false
      contents: |
        [Unit]
        Description=Plex Media Server
        After=network-online.target
        After=podman-secrets.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
        # https://hub.docker.com/r/linuxserver/plex
        # https://hub.docker.com/r/plexinc/pms-docker/
        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name plex \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            --secret plex \
            --device /dev/dri:/dev/dri \
            -e PUID=1000 \
            -e PGID=1000 \
            -p 32400:32400/tcp \
            -e TZ="America/New_York" \
            -e FILE__PASSWORD=/run/secrets/plex \
            -e VERSION=docker \
            -h plex.kore \
            -v plex_config:/config \
            --mount type=tmpfs,tmpfs-size=1G,destination=/transcode \
            -v /var/data/plex:/data \
            docker.io/linuxserver/plex:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: pihole.service
      enabled: false
      contents: |
        [Unit]
        Description=Pihole DNS Server
        After=network-online.target
        After=podman-secrets.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

            # TODO script password creation volume similar to motion
            # --secret pihole,target=ADMIN_PASSWORD \
            # -e WEBPASSWORD="${ADMIN_PASSWORD}" \

        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name pihole \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            -e TZ="America/New_York" \
            -v pihole-etc:/etc/pihole \
            -v pihole-dnsmasq.d:/etc/dnsmasq.d \
            -v pihole-log:/var/log \
            --dns 127.0.0.1 \
            --dns 1.1.1.1 \
            --hostname pi.hole \
            -e VIRTUAL_HOST=pi.hole \
            -e PROXY_LOCATION=pi.hole \
            -e ServerIP=10.50.0.1 \
            -p 53:53/udp \
            -p 53:53/tcp \
            -p 8080:80 \
            docker.io/pihole/pihole:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    # Used as upstream dns for pihole
    - name: unbound.service
      enabled: false
      contents: |
        [Unit]        
        Description=Unbound DNS Server
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name unbound \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            -p 5353:53/tcp \
            -p 5353:53/udp \
            --restart=unless-stopped \
            docker.io/mvance/unbound:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        
        [Install]
        WantedBy=multi-user.target
    
    # TODO finish nginx reverse proxy setup
    - name: nginx.service
      enabled: false
      contents: |
        [Unit]
        Description=Nginx Reverse Proxy Server
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStart=podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name nginx \
            --pull missing \
            --label "io.containers.autoupdate=registry" \
            -p 8080:80 \
            -p 443:443 \
            registry.access.redhat.com/ubi9/nginx-120:1-75
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target
    
    - name: graylog.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Wants=network-online.target
        After=mongodb.service
        After=elasticsearch.service
        After=podman-secrets.service
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh graylog
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name graylog \
            --pull missing \
            --secret graylog,type=env,target=GRAYLOG_PASSWORD_SECRET \
            --secret graylog_root_password_sha2,type=env,target=GRAYLOG_ROOT_PASSWORD_SHA2 \
            -e "GRAYLOG_NODE_ID_FILE=/usr/share/graylog/data/config/node-id" \
            -e "GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:9000" \
            -e "GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/" \
            -e "GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200" \
            -e "GRAYLOG_MONGODB_URI=mongodb://mongodb:27017/graylog" \
            -v graylog_data:/usr/share/graylog/data \
            -v "graylog_journal:/usr/share/graylog/data/journal" \
            --net graylog \
            --network-alias "graylog" \
            -p 9000:9000 \
            -p 1514:1514 \
            -p 1514:1514/udp \
            -p 12201:12201 \
            -p 12201:12201/udp \
            -p 5044:5044/tcp \
            -p 5140:5140/udp \
            -p 5140:5140/tcp \
            -p 13301:13301/tcp \
            -p 5555:5555/tcp \
            -p 5555:5555/udp \
            -p 13302:13302/tcp \
            --entrypoint '["/usr/bin/tini", "--", "wait-for-it", "elasticsearch:9200", "--", "/docker-entrypoint.sh"]' \
            docker.io/graylog/graylog:4.3
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: mongodb.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Before=graylog.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh graylog
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name mongo \
            --pull missing \
            -v graylog_mongo_data:/data/db \
            --net graylog \
            --network-alias mongodb \
            docker.io/mongo:5.0
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target
    
    - name: elasticsearch.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Before=graylog.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh graylog
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name elasticsearch \
            --pull missing \
            -e http.host=0.0.0.0 \
            -e transport.host=localhost \
            -e network.host=0.0.0.0 \
            -e ES_JAVA_OPTS="-Dlog4j2.formatMsgNoLookups=true -Xms2048m -Xmx2048m" \
            -v graylog_es_data:/usr/share/elasticsearch/ \
            --net graylog \
            --network-alias elasticsearch \
            -p 9200:9200 \
            --ulimit memlock=-1:-1 \
            -m 4g \
            docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: metricbeat.service
      enabled: false
      contents: |
        [Unit]
        Description=Metricbeat metric elastic beats shipper
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name metricbeat \
            --pull missing \
            -v /usr/local/etc/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro \
            -v /var/run/docker.sock:/var/run/docker.sock:ro \
            -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:ro \
            -v /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro \
            -v /proc:/hostfs/proc:ro \
            -v /:/hostfs:ro \
            --net=host \
            --cap-add sys_ptrace \
            --cap-add dac_read_search \
            docker.elastic.co/beats/metricbeat-oss:7.10.2 \
            -e -system.hostfs=/hostfs
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: journalbeat.service
      enabled: true
      contents: |
        [Unit]
        Description=Journal beat elastic beats journal shipper
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name=journalbeat \
            --pull missing \
            -v /usr/local/etc/journalbeat.yml:/usr/share/journalbeat/journalbeat.yml:ro \
            -v /var/log/journal:/var/log/journal:ro \
            -v /etc/machine-id:/etc/machine-id:ro \
            -v /run/systemd:/run/systemd:ro \
            -v /etc/hostname:/etc/hostname:ro \
            docker.elastic.co/beats/journalbeat-oss:7.10.2 \
            journalbeat -e -strict.perms=false
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target
    
    - name: gollum.service
      enabled: false
      contents: |
        [Unit]
        Description=Gollum Git Wiki
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name gollum \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            -u root \
            -e GOLLUM_AUTHOR_USERNAME=s-fairchild \
            -e GOLLUM_AUTHOR_EMAIL=steve51516@gmail.com \
            -p 4567:4567 \
            -v gollumwiki:/wiki \
            docker.io/gollumwiki/gollum:master \
                --mathjax \
                --mermaid \
                --emoji \
                --user-icons \
                --default-keybinding vim \
                --allow-uploads page
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: cleanup-motion-videos.service
      enabled: false
      contents: |
        [Unit]
        Description=Delete motion video files older than 30 days
        Wants=cleanup-motion-videos.timer
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        ExecStart=find /var/data/motion /var/data/motionplus -name "*.mkv" -type f -mtime +30 -delete

        [Install]
        WantedBy=multi-user.target
    
    - name: cleanup-motion-videos.timer
      enabled: true
      contents: |
        [Unit]
        Description=Triggers cleanup-motion-videos.service to delete videos older than 30 days
        Requires=cleanup-motion-videos.service
        After=network-online.target
        Wants=network-online.target

        [Timer]
        Unit=cleanup-motion-videos.service
        OnCalendar=*-*-* 00:00:00

        [Install]
        WantedBy=timers.target
  
    # Init services. Runs one time on first boot.
    - name: git-server-init.service
      enabled: true
      contents: |
        [Unit]
        Description=Initializes bare git repositories to serve as remote repositories
        After=network-online.target
        Wants=network-online.target

        [Service]
        User=git
        Group=git
        WorkingDirectory=/var/data/git
        Type=simple
        ExecStart=/usr/local/bin/git-server-init.sh -d /var/data/git/obsidian.git

        [Install]
        WantedBy=multi-user.target

    - name: podman-secrets.service
      enabled: true
      contents: |
        [Unit]
        Description=Create podman secrets
        After=network-online.target
        Wants=network-online.target
        Before=motionplus.service
        Before=v4l2rtspserver.service
        Before=pihole.service
        Before=graylog.service

        [Service]
        WorkingDirectory=/tmp
        Type=simple
        ExecStart=/usr/local/bin/create_podman_secrets.sh

        [Install]
        WantedBy=multi-user.target
      
    - name: podman-auto-update.timer
      enabled: true
    - name: openvpn-server@serverudp.service
      enabled: true
    - name: openvpn-server@servertcp.service
      enabled: true
      
      # Install admin tools
      # `--allow-inactive` ensures that rpm-ostree does not return an error
      # We run before `zincati.service` to avoid conflicting rpm-ostree
      # transactions.
      # if the package is already installed. This is useful if the package is
      # added to the root image in a future Fedora CoreOS release as it will
      # prevent the service from failing.
      # Restart policy is to try again later if another rpm-ostree deployment is active
    - name: rpm-ostree-install-pkgs.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer vim with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Restart=on-failure
        RestartSec=60
        ExecStart=/usr/bin/rpm-ostree install -y --apply-live --allow-inactive \
            vim htop screen iotop openvpn
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target

storage:
  disks:
  - device: /dev/disk/by-id/coreos-boot-disk
    wipe_table: false
    partitions:
    - number: 4
      label: root
      size_mib: 30720
      resize: true
    - size_mib: 0
      label: containers
  filesystems:
    - path: /var/lib/containers
      device: /dev/disk/by-partlabel/containers
      format: btrfs
      with_mount_unit: true

  links:
    # - path: /var/data/motionplus
    #   target: /var/data/motion

    # - path: /var/data/git
    #   target: /var/home/git
    
    - path: /home/steven/motion
      target: /var/data/motion

  directories:
    - path: /var/data
      user:
        name: root
      group:
        name: root
      mode: 0755

    - path: /var/data/motion
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/motion/frontdoor
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/motion/bedroom1
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/motion/driveway
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/emby
      user:
        name: root
      group:
        name: movies

    - path: /var/data/plex
      user:
        name: root
      group:
        name: movies

    - path: /var/data/emby/Movies
      user:
        name: root
      group:
        name: movies
      mode: 0770

    - path: /var/data/emby/TV
      user:
        name: root
      group:
        name: movies
      mode: 0770

    - path: /var/data/emby/Mixed
      user:
        name: root
      group:
        name: movies
      mode: 0770

    - path: /var/data/deja/r10
      user:
        name: steven
      group:
        name: steven
      mode: 0700

    - path: /var/data/deja/g15
      user:
        name: steven
      group:
        name: steven
      mode: 0700

  files:
    - path: /usr/local/bin/git-server-init.sh
      contents:
        local: bin/git-server-init.sh
      user:
        name: git
      group:
        name: git
      mode: 0540

    # Needed for elasticsearch
    - path: /etc/sysctl.d/99-vm_max_map.conf
      mode: 0644
      contents:
        inline: |
          vm.max_map_count=262144

    - path: /etc/systemd/zram-generator.conf
      mode: 0644
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]
    
    - path: /var/container_secrets.tar
      overwrite: true
      contents:
        local: container_secrets.tar.gz
        compression: gzip

    # Used by podman-secrets.service
    - path: /usr/local/bin/create_podman_secrets.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/create_podman_secrets.sh
    
    # Used by motion to copy secrets into temp config
    - path: /usr/local/bin/motion_config_editor.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/motion_config_editor.sh
    
    # Used by v4l2rtspserver.servive
    - path: /usr/local/bin/start_v4l2rtspserver.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/start_v4l2rtspserver.sh

    # Ensure ELP usb camera is added for v4l2rtspserver
    - path: /etc/udev/rules.d/99-usb-cam.rules
      contents:
        inline: |
          KERNEL=="video0", SYMLINK="usbcam0", TAG+="systemd", ENV{SYSTEMD_WANTS}="v4l2rtspserver.service"
    
    - path: /etc/udev/rules.d/50-usb_power_save.rules
      contents:
        inline: |
          # blacklist for usb autosuspend
          ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="32e4", ATTR{idProduct}=="9310", GOTO="power_usb_rules_end"

          ACTION=="add", SUBSYSTEM=="usb", TEST=="power/control", ATTR{power/control}="auto"
          LABEL="power_usb_rules_end"

    - path: /etc/profile.d/zz-default-editor.sh
      overwrite: true
      contents:
        inline: |
          export EDITOR=vim

    - path: /usr/local/etc/graylog/.env
      mode: 0600
      contents:
        local: graylog/.env
    
    - path: /usr/local/bin/check_podman_network.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/check_podman_network.sh
    
    # Motion config files
    - path: /usr/local/etc/motion/motionplus.conf
      overwrite: true
      contents:
        local: motion/motionplus.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera1.conf
      overwrite: true
      contents:
        local: motion/camera1.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera2.conf
      overwrite: true
      contents:
        local: motion/camera2.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera3.conf
      overwrite: true
      contents:
        local: motion/camera3.conf
      mode: 0644
    
    - path: /usr/local/etc/unbound/unbound.conf
      overwrite: true
      contents:
        local: unbound/unbound.conf
      mode: 0644
    
    # Beats config files
    - path: /usr/local/etc/journalbeat.yml
      overwrite: true
      mode: 0644
      contents:
        local: beats/journalbeat.yml
    
    - path: /usr/local/etc/metricbeat.yml
      overwrite: true
      mode: 0644
      contents:
        local: beats/metricbeat.yml

    # Openvpn config files
    - path: /etc/openvpn/server/keys/ca.key
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/ca.key

    - path: /etc/openvpn/server/keys/ca.crt
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/ca.crt

    - path: /etc/openvpn/server/keys/kore.key
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/kore.key

    - path: /etc/openvpn/server/keys/dh.pem
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/dh.pem

    - path: /etc/openvpn/server/serverudp.conf
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/server/serverudp.conf
    
    - path: /etc/openvpn/server/servertcp.conf
      overwrite: true
      contents:
        local: openvpn/server/servertcp.conf

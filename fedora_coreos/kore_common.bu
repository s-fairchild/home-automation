variant: fcos
version: 1.4.0
passwd:
  groups:
    - name: backups
    - name: cctv
    - name: movies
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
    - name: deja
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
      groups:
        - backups
    - name: steven
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
      groups:
        - backups
        - cctv
        - movies
    - name: motion
      home_dir: /var/data/motion
      no_create_home: true
      system: true
      gecos: Motion Camera System Account
      # groups:
        # - video
    - name: emby
      uid: 1003
      groups:
        - movies
      system: true
    - name: plex
      system: true
    - name: pihole
      system: true
storage:
  directories:
    - path: /var/data/motion
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/motion/frontdoor
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/motion/dustins_room
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/motion/driveway
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/emby
      user:
        name: emby
      group:
        name: movies
    - path: /var/data/plex
      user:
        name: plex
      group:
        name: movies
    - path: /var/data/emby/Movies
      user:
        name: emby
      group:
        name: movies
      mode: 0770
    - path: /var/data/emby/TV
      user:
        name: emby
      group:
        name: movies
      mode: 0770
    - path: /var/data/emby/Mixed
      user:
        name: emby
      group:
        name: movies
      mode: 0770
    - path: /var/data/deja/r10
      user:
        name: deja
      group:
        name: backups
      mode: 0770
    - path: /var/container_secrets
      user:
        name: root
      group:
        name: root

  files:
    # System config
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          kore

    - path: /etc/systemd/zram-generator.conf
      mode: 0644
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]

    - path: /etc/resolv.conf.local-dns
      overwrite: true
      contents:
        inline: |
          nameserver 127.0.0.1
          nameserver 8.8.8.8
          nameserver 8.8.4.4
    
    - path: /var/container_secrets/v4l2rtspserver
      overwrite: true
      contents:
        local: container_secrets/v4l2rtspserver
    - path: /var/container_secrets/v4l2rtspserver_url
      overwrite: true
      contents:
        local: container_secrets/v4l2rtspserver_url
    - path: /var/container_secrets/pihole
      overwrite: true
      contents:
        local: container_secrets/pihole
    - path: /var/container_secrets/motion_camera1
      overwrite: true
      contents:
        local: container_secrets/motion_camera1
    - path: /var/container_secrets/motion_camera2
      overwrite: true
      contents:
        local: container_secrets/motion_camera2
    - path: /var/container_secrets/motion_camera3
      overwrite: true
      contents:
        local: container_secrets/motion_camera3
    - path: /var/container_secrets/plex
      overwrite: true
      contents:
        local: container_secrets/plex

    # Used by podman-secrets.service
    - path: /usr/local/bin/create_podman_secrets.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/create_podman_secrets.sh
    
    # Used by motion to copy secrets into temp config
    - path: /usr/local/bin/motion_config_editor.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/motion_config_editor.sh
    
    # Used by v4l2rtspserver.servive
    - path: /usr/local/bin/start_v4l2rtspserver.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/start_v4l2rtspserver.sh

    # Ensure ELP usb camera is added for v4l2rtspserver
    - path: /etc/udev/rules.d/99-usb-cam.rules
      contents:
        inline: |
          KERNEL=="video[0-9]*", ACTION=="add", SUBSYSTEM=="video4linux", SUBSYSTEMS=="usb", ATTR{index}=="0", ATTRS{idVendor}=="32e4", ATTRS{idProduct}=="9310", GROUP="video", SYMLINK+="usb-cam0", TAG+="systemd", ENV{SYSTEMD_WANTS}="v4l2rtspserver.service"

    # User configs
    - path: /etc/profile.d/zz-default-editor.sh
      overwrite: true
      contents:
        inline: |
          export EDITOR=vim

    # App configs
    - path: /usr/local/etc/motion/motion.conf
      overwrite: true
      contents:
        local: motion/motion.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera1.conf
      overwrite: true
      contents:
        local: motion/camera1.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera2.conf
      overwrite: true
      contents:
        local: motion/camera2.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera3.conf
      overwrite: true
      contents:
        local: motion/camera3.conf
      mode: 0644
    
    - path: /usr/local/etc/unbound/unbound.conf
      overwrite: true
      contents:
        local: unbound/unbound.conf
      mode: 0644
    
    - path: /etc/wireguard/wg0.conf
      mode: 0600
      contents:
        inline: |
          [Interface]
          Address = 192.168.71.1/24,fdc9:3c6b:21c7:e6bd::1/64
          PrivateKey = cHnFbnHm5ZuN1/VVd+C+/lElCqJKTirnglNEjgdTt3E=
          ListenPort = 51820

          [Peer]
          PublicKey = Aq3buMNhjUMYoUfhW/GJJtZ613j8dRw/w8aDbfP6v1E=
          PresharedKey = PoQHdBJ90qM+j8S2aWFLddjvO1Sd9sqaYZsPRwANbfs=
          AllowedIPs = 192.168.71.0/24,fdc9:3c6b:21c7:e6bd::/64

    - path: /usr/local/bin/graylog.yaml
      overwrite: true
      contents:
        inline: |
          version: '2'
          services:
            # MongoDB: https://hub.docker.com/_/mongo/
            mongodb:
              image: mongo:4.2
              volumes:
                - /var/data/mongo:/data/db
            # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/docker.html
            elasticsearch:
              image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
              volumes:
                - /var/data/elasticsearch:/usr/share/elasticsearch/data
              environment:
                - http.host=0.0.0.0
                - transport.host=localhost
                - network.host=0.0.0.0
                - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
              ulimits:
                memlock:
                  soft: -1
                  hard: -1
              mem_limit: 1g
            # Graylog: https://hub.docker.com/r/graylog/graylog/
            graylog:
              image: graylog/graylog:4.3
              volumes:
                - /var/data/graylog:/usr/share/graylog/data
              environment:
                # CHANGE ME (must be at least 16 characters)!
                - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
                # Password: admin
                - ***REMOVED***
                - GRAYLOG_HTTP_EXTERNAL_URI=http://0.0.0.0:9000/
              entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
              links:
                  - mongodb:mongo
                  - elasticsearch
              restart: always
              depends_on:
                - mongodb
                - elasticsearch
              ports:
                # Graylog web interface and REST API
                - 9000:9000
                # Syslog TCP
                - 1514:1514
                # Syslog UDP
                - 1514:1514/udp
                # GELF TCP
                - 12201:12201
                # GELF UDP
                - 12201:12201/udp
          # Volumes for persisting data, see https://docs.docker.com/engine/admin/volumes/volumes/
          # volumes:
            # mongo_data:
              # driver: local
            # es_data:
              # driver: local
            # graylog_data:
              # driver: local

  # Required to use local dns server
  links:
    - path: /etc/resolv.conf
      overwrite: true
      user:
        id: 0
      group:
        id:
          0
      target: /etc/resolv.conf.local-dns

systemd:
  units:
    - name: firewalld.service
      enabled: true
    
    - name: podman-secrets.service
      enabled: true
      contents: |
        [Unit]
        Description=Create podman secrets
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/create_podman_secrets.sh

        [Install]
        WantedBy=multi-user.target
      
    # TODO add --device for hw install
    - name: plex.service
      enabled: false
      contents: |
        [Unit]
        Description=Plex Media Server
        After=network-online.target
        Wants=network-online.target

        # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
        # https://hub.docker.com/r/linuxserver/plex
        # https://hub.docker.com/r/plexinc/pms-docker/
        [Service]
        Type=simple
        TimeoutStartSec=0
        RestartSec=30
        Restart=on-failure
        ExecStartPre=-/bin/podman kill plex
        ExecStartPre=-/bin/podman rm plex
          # Optional ports, read linked docs for usage
          # -p 32400:32400 \
          # -p 1900:1900/udp \
          # -p 3005:3005 \
          # -p 5353:5353/udp \
          # -p 8324:8324 \
          # -p 32410:32410/udp \
          # -p 32412:32412/udp \
          # -p 32413:32413/udp \
          # -p 32414:32414/udp \
          # -p 32469:32469
                # --device /dev/dri:/dev/dri \
                # -e PLEX_CLAIM="<claimToken>" \
        ExecStart=/bin/podman run \
                --name plex \
                --pull newer \
                --secret plex \
                --device /dev/dri:/dev/dri \
                -e PUID=1000 \
                -e PGID=1000 \
                -p 32400:32400/tcp \
                -e TZ="America/New_York" \
                -e FILE__PASSWORD=/run/secrets/plex \
                -e VERSION=docker \
                -h plex.kore \
                -v plex_config:/config \
                --mount type=tmpfs,tmpfs-size=1G,destination=/transcode \
                -v /var/data/plex:/data \
                docker.io/linuxserver/plex:latest
        ExecStop=/bin/podman stop plex

        [Install]
        WantedBy=multi-user.target

    - name: emby.service
      enabled: true
      contents: |
        [Unit]
        Description=Emby Media Server
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        TimeoutStartSec=0
        RestartSec=30
        Restart=on-failure
        ExecStartPre=-/bin/podman kill emby
        ExecStartPre=-/bin/podman rm emby
        ExecStart=/bin/podman run \
                --name emby \
                --pull newer \
                --device /dev/dri:/dev/dri \
                -v emby_config:/config \
                -v /var/data/emby/Movies:/mnt/Movies:Z \
                -v /var/data/emby/TV:/mnt/TV:Z \
                -v /var/data/emby/Mixed:/mnt/Mixed:Z \
                -p 8096:8096 \
                -e UID=1003 \
                -e GID=1002 \
                -e GIDLIST=100 \
                docker.io/linuxserver/emby:latest
        ExecStop=/bin/podman stop emby

        [Install]
        WantedBy=multi-user.target
    
    - name: motion.service
      enabled: true
      contents: |
        [Unit]
        Description=Motion Video Server
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        TimeoutStartSec=0
        RestartSec=30
        Restart=on-failure
        ExecStartPre=-/bin/podman kill motion
        ExecStartPre=-/bin/podman rm motion
        ExecStartPre=/bin/podman run --rm \
            --name motion-config-editor \
            --pull newer \
            --secret motion_camera1,type=env \
            --secret motion_camera2,type=env \
            --secret motion_camera3,type=env \
            --device /dev/dri:/dev/dri \
            -v /var/usrlocal/etc/motion:/mnt/motion:Z \
            -v motion_config:/mnt/temp_config \
            -v /var/usrlocal/bin/motion_config_editor.sh:/bin/motion_config_editor.sh:Z \
            docker.io/bash:5.2.2 bash /bin/motion_config_editor.sh

        ExecStart=/bin/podman run \
            --name motion \
            --pull newer \
            -e TZ="America/New_York" \
            -v motion_config:/usr/local/etc/motion \
            -v /var/data/motion:/var/lib/motion:Z \
            docker.io/motionproject/motion:latest
        ExecStop=/bin/podman stop motion
        ExecStopPost=/bin/podman volume rm motion_config

        [Install]
        WantedBy=multi-user.target
    
    - name: cleanup-motion-videos.service
      enabled: false
      contents: |
        [Unit]
        Wants=cleanup-motion-videos.timer

        [Service]
        Type=oneshot
        ExecStart=find /var/data/motion -name "*.mkv" -type f -mtime +30 -delete

        [Install]
        WantedBy=multi-user.target
    
    - name: cleanup-motion-videos.timer
      enabled: true
      contents: |
        [Unit]
        Description=Delete motion video files older than 30 days
        Requires=cleanup-motion-videos.service

        [Timer]
        Unit=cleanup-motion-videos.service
        OnCalendar=*-*-* 00:00:00

        [Install]
        WantedBy=timers.target

    - name: systemd-resolved.service
      enabled: false
    
    - name: pihole.service
      enabled: true
      contents: |
        [Unit]
        Description=Pihole DNS Server
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        TimeoutStartSec=0
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman kill pihole
        ExecStartPre=-/bin/podman rm pihole
            # TODO script password creation volume similar to motion
            # --secret pihole,target=ADMIN_PASSWORD \
            # -e WEBPASSWORD="${ADMIN_PASSWORD}" \
        ExecStart=/bin/podman run \
            --name pihole \
            --pull newer \
            -e TZ="America/New_York" \
            -v pihole-etc:/etc/pihole \
            -v pihole-dnsmasq.d:/etc/dnsmasq.d \
            -v pihole-log:/var/log \
            --dns 127.0.0.1 \
            --dns 1.1.1.1 \
            --hostname pi.hole \
            -e VIRTUAL_HOST=pi.hole \
            -e PROXY_LOCATION=pi.hole \
            -e ServerIP=10.50.0.1 \
            -p 53:53/udp \
            -p 53:53/tcp \
            -p 8080:80 \
            docker.io/pihole/pihole:latest
        ExecStop=/bin/podman stop pihole

        [Install]
        WantedBy=multi-user.target

    - name: unbound.service
      enabled: false
      contents: |
        [Unit]        
        Description=Unbound DNS Server
        After=network.target

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStart=/bin/podman run \
            --name unbound \
            --pull newer \
            -p 5353:53/tcp \
            -p 5353:53/udp \
            --restart=unless-stopped \
            docker.io/mvance/unbound:latest
        
        [Install]
        WantedBy=multi-user.target
  
    - name: v4l2rtspserver.service
      enabled: true
      contents: |
        [Unit]
        Description=V4L2 RTSP Server
        After=network.target
        # TODO troubleshoot why this device file isn't appearing
        # BindsTo=sys-devices-pci0000:00-0000:00:14.0-usb1-1\x2d1-1\x2d1.3-1\x2d1.3:1.0-video4linux-video1.device
        # After=sys-devices-pci0000:00-0000:00:14.0-usb1-1\x2d1-1\x2d1.3-1\x2d1.3:1.0-video4linux-video1.device

        [Service]
        Type=simple
        Restart=always
        RestartSec=30
        ExecStartPre=-/bin/podman kill v4l2rtspserver
        ExecStartPre=-/bin/podman rm v4l2rtspserver
        ExecStart=podman run \
                    --name v4l2rtspserver \
                    --pull newer \
                    --secret v4l2rtspserver,type=env,target=SECRET \
                    --secret v4l2rtspserver_url,type=env,target=URL \
                    --device /dev/v4l/by-id/usb-HD_Camera_Manufacturer_HD_USB_Camera_2020101401-video-index0:/dev/video0 \
                    --device /dev/snd:/dev/snd \
                    -v /var/usrlocal/bin/start_v4l2rtspserver.sh:/usr/local/bin/start_v4l2rtspserver.sh \
                    -p 8554:8554 \
                    --entrypoint "/bin/bash" \
                    docker.io/mpromonet/v4l2rtspserver:latest-amd64 \
                    -c "/usr/local/bin/start_v4l2rtspserver.sh"
        ExecStop=/bin/podman stop v4l2rtspserver

        [Install]
        WantedBy=multi-user.target

    - name: wg-quick@wg0.service
      enabled: true    
    
    # TODO 
    # 1. setup graylog with podman-compose
    # 2. configure nginx reverse https proxy
      
      # Install admin tools
      # `--allow-inactive` ensures that rpm-ostree does not return an error
      # We run before `zincati.service` to avoid conflicting rpm-ostree
      # transactions.
      # if the package is already installed. This is useful if the package is
      # added to the root image in a future Fedora CoreOS release as it will
      # prevent the service from failing.
      # Restart policy is to try again later if another rpm-ostree deployment is active
    - name: rpm-ostree-install-pkgs.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer vim with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Restart=on-failure
        RestartSec=60
        ExecStart=/usr/bin/rpm-ostree install -y --apply-live --allow-inactive \
            vim htop screen
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target

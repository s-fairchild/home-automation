variant: fcos
version: 1.4.0
kernel_arguments:
  should_exist:
    # Attempt to disable power saving autosuspend
    - usbcore.autosuspend=-1
passwd:
  groups:
    - name: cctv
    - name: movies
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN9JIVOfljooATqrqoBsPpBoz94PC6NT/68HP5ZVxcsm Generated By Termius
    - name: steven
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN9JIVOfljooATqrqoBsPpBoz94PC6NT/68HP5ZVxcsm Generated By Termius
      groups:
        - wheel
        - sudo
        - cctv
        - movies
    - name: git
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
    - name: plex
      uid: 900
      gecos: "Plex Media Server Service Account"
      system: true
      groups:
        - movies
    - name: jellyfin
      uid: 901
      gecos: "Jellyfin Media Server Service Account"
      system: true
      groups:
        - movies
systemd:
  units:
    - name: motionplus.service
      enabled: true
      contents: |
        [Unit]
        Description=Motionplus Video Server
        After=network-online.target
        After=podman-secrets.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh cameras
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --label "io.containers.autoupdate=registry" \
            --name %N \
            --init \
            --init-path /var/usrlocal/bin/motion_config_editor.sh \
            --secret motion_camera1,type=env \
            --secret motion_camera2,type=env \
            --secret motion_camera3,type=env \
            --secret v4l2rtspserver_camera1_url,type=env \
            --secret v4l2rtspserver_camera2_url,type=env \
            --secret v4l2rtspserver_camera3_url,type=env \
            --net cameras \
            --network-alias cameras \
            --pull missing \
            -e TZ="America/New_York" \
            -v /usr/local/etc/motionplus:/mnt/motionplus:Z,ro \
            -v /var/data/motionplus:/var/lib/motionplus:Z,U \
            -p 8080:8080 \
            --device /dev/dri:/dev/dri \
            docker.io/steve51516/motionplus:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    # Entrypoint is replaced with bash -c bin/start_v4l2rtspserver.sh to allow use of podman secrets in entrypoint
    - name: v4l2rtspserver.service
      enabled: true
      contents: |
        [Unit]
        Description=V4L2 RTSP Server
        After=network.target
        Wants=network-online.target
        After=podman-secrets.service
        RequiresMountsFor=%t/containers
        BindsTo=dev-video0.device
        After=dev-video0.device
        # BindsTo=dev-v4l-by\x2did-usb\x2dHD_Camera_Manufacturer_HD_USB_Camera_2020101401\x2dvideo\x2dindex0.device
        # After=dev-v4l-by\x2did-usb\x2dHD_Camera_Manufacturer_HD_USB_Camera_2020101401\x2dvideo\x2dindex0.device

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh cameras
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --sdnotify=conmon \
            --rm \
            -d \
            --replace \
            --label "io.containers.autoupdate=registry" \
            --name %N \
            --net cameras \
            --network-alias camera3 \
            --pull missing \
            --secret v4l2rtspserver,type=env,target=SECRET \
            --secret v4l2rtspserver_camera3_url,type=env,target=URL \
            --device /dev/v4l/by-id/usb-HD_Camera_Manufacturer_HD_USB_Camera_2020101401-video-index0:/dev/video0 \
            --device /dev/snd:/dev/snd \
            --device /dev/dri:/dev/dri \
            -v /var/usrlocal/bin/start_v4l2rtspserver.sh:/usr/local/bin/start_v4l2rtspserver.sh \
            -p 8554:8554/tcp \
            -p 8554:8554/udp \
            --entrypoint "/bin/bash" \
            docker.io/mpromonet/v4l2rtspserver:latest-amd64 \
                -c "/usr/local/bin/start_v4l2rtspserver.sh /dev/video0,default:CARD=Camera"

        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target
    
    - name: jellyfin.service
      enabled: true
      contents: |
        [Unit]
        Description=jellyfin Media Server
        After=network-online.target
        After=podman-secrets.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        # https://jellyfin.org/docs/general/installation/container#podman
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --sdnotify=conmon \
            -d \
            --rm \
            --replace \
            --name %N \
            --label "io.containers.autoupdate=registry" \
            -p 8096:8096/tcp \
            -p 8920:8920/tcp \
            -e JELLYFIN_PublishedServerUrl="http://10.50.0.2:8096" \
            --device /dev/dri:/dev/dri \
            -v jellyfin-config:/config:Z \
            --mount type=tmpfs,tmpfs-size=512M,destination=/cache,U=true \
            -v /var/data/jellyfin:/media:Z,U \
                docker.io/jellyfin/jellyfin:latest

        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: pihole.service
      enabled: false
      contents: |
        [Unit]
        Description=Pihole DNS Server
        After=network-online.target
        After=podman-secrets.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

            # TODO script password creation volume similar to motion
            # --secret pihole,target=ADMIN_PASSWORD \
            # -e WEBPASSWORD="${ADMIN_PASSWORD}" \

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name %N \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            -e TZ="America/New_York" \
            -v pihole-etc:/etc/pihole \
            -v pihole-dnsmasq.d:/etc/dnsmasq.d \
            -v pihole-log:/var/log \
            --dns 127.0.0.1 \
            --dns 1.1.1.1 \
            --hostname pi.hole \
            -e VIRTUAL_HOST=pi.hole \
            -e PROXY_LOCATION=pi.hole \
            -e ServerIP=10.50.0.1 \
            -p 53:53/udp \
            -p 53:53/tcp \
            -p 8080:80 \
            docker.io/pihole/pihole:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    # Used as upstream dns for pihole
    - name: unbound.service
      enabled: false
      contents: |
        [Unit]        
        Description=Unbound DNS Server
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name %N \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            -p 5353:53/tcp \
            -p 5353:53/udp \
            --restart=unless-stopped \
            docker.io/mvance/unbound:latest
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        
        [Install]
        WantedBy=multi-user.target
    
    # TODO finish nginx reverse proxy setup
    - name: nginx.service
      enabled: false
      contents: |
        [Unit]
        Description=Nginx Reverse Proxy Server
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name nginx \
            --pull missing \
            --label "io.containers.autoupdate=registry" \
            -p 8080:80 \
            -p 443:443 \
            registry.access.redhat.com/ubi9/nginx-120:1-75
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: kibana.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers
        After=elasticsearch.service

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh elastic
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
            # --secret es_token,type=env,target=ENROLLMENT_TOKEN \
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --sdnotify=conmon \
            --rm \
            -d \
            --replace \
            --name %N \
            --pull missing \
            --secret kibana_system,type=env,target=ELASTICSEARCH_PASSWORD \
            --secret kibana_xpack_saved_objects_key,type=env,target=XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY \
            --secret kibana_xpack_reporting_key,type=env,target=XPACK_REPORTING_ENCRYPTIONKEY \
            --secret kibana_xpack_security_key,type=env,target=XPACK_SECURITY_ENCRYPTIONKEY \
            -e XPACK_REPORTING_ROLES_ENABLED="false" \
            -e MONITORING_CLUSTER_ALERTS_EMAIL_NOTIFICATIONS_EMAIL_ADDRESS="example@example.com" \
            -e SERVER_NAME="0.0.0.0" \
            -e XPACK_REPORTING_KIBANASERVER_HOSTNAME="es01" \
            -e SERVER_PUBLICBASEURL="http://0.0.0.0:5601" \
            -e ELASTICSEARCH_HOSTS="https://es01:9200" \
            -e ELASTICSEARCH_USERNAME=kibana_system \
            -e SERVER_NAME="kibana.kore" \
            -h kibana.kore \
            --net elastic \
            --network-alias kibana \
            -m 2g \
            -p 5601:5601 \
            -v /var/data/elastic/kibana:/usr/share/kibana/data:Z,U \
            -v kibana_config:/usr/share/kibana/config:Z,U \
            docker.elastic.co/kibana/kibana:8.6.0-amd64
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: elasticsearch.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Before=graylog.service
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/usr/local/bin/check_podman_network.sh elastic
        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
            --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name %N \
            --pull missing \
            -h es01.kore \
            --secret elastic_password,type=env,target=ELASTIC_PASSWORD \
            --secret elastic_password,type=env,target=ELASTICSEARCH_PASSWORD \
            -v /var/data/elastic/elasticsearch:/usr/share/elasticsearch/data:Z,U \
            -v es_config:/usr/share/elasticsearch/config \
            -v es_logs:/usr/share/elasticsearch/logs \
            --net elastic \
            --network-alias es01 \
            -p 9200:9200 \
            -p 9300:9300 \
            --ulimit memlock=-1:-1 \
            -m 3g \
            -e TRANSPORT_HOST="localhost" \
            -e ES_JAVA_OPTS="-Xms1g -Xmx1g" \
            -e discovery.type="single-node" \
            -e ES_SETTING_BOOTSTRAP_MEMORY__LOCK=true \
            -e CLUSTER_NAME="podman-cluster" \
            -e NETWORK_HOST="0.0.0.0" \
            -e HTTP_HOST="0.0.0.0" \
            docker.elastic.co/elasticsearch/elasticsearch:8.6.0-amd64

        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: metricbeat.service
      enabled: true
      contents: |
        [Unit]
        Description=Metricbeat metric elastic beats shipper
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name %N \
            --pull missing \
            -v /usr/local/etc/%N.yml:/usr/share/%N/%N.yml:ro \
            -v /run/podman/podman.sock:/var/run/docker.sock:ro \
            -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:ro \
            -v /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro \
            -v /proc:/hostfs/proc:ro \
            -v /:/hostfs:ro \
            --net=host \
            --cap-add SYS_PTRACE \
            --cap-add DAC_READ_SEARCH \
            docker.elastic.co/beats/%N-oss:7.10.2 \
                -e -system.hostfs=/hostfs
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: journalbeat.service
      enabled: true
      contents: |
        [Unit]
        Description=Journal beat elastic beats journal shipper
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --rm \
            --sdnotify=conmon \
            -d \
            --replace \
            --name %N \
            --pull missing \
            -v /usr/local/etc/%N.yml:/usr/share/%N/%N.yml:ro \
            -v /var/log/journal:/var/log/journal:ro \
            -v /etc/machine-id:/etc/machine-id:ro \
            -v /run/systemd:/run/systemd:ro \
            -v /etc/hostname:/etc/hostname:ro \
            docker.elastic.co/beats/%N-oss:7.10.2 \
                journalbeat -e -strict.perms=false
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target
    
    - name: gollum.service
      enabled: false
      contents: |
        [Unit]
        Description=Gollum Git Wiki
        After=network.target
        Wants=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Type=notify
        NotifyAccess=all
        RestartSec=30
        TimeoutStopSec=70
        Restart=on-failure
        Environment=PODMAN_SYSTEMD_UNIT=%n

        ExecStartPre=/bin/rm \
            -f %t/%n.ctr-id
        ExecStart=/bin/podman run \
        	  --cidfile=%t/%n.ctr-id \
            --cgroups=no-conmon \
            --sdnotify=conmon \
            -d \
            --rm \
            --replace \
            --name %N \
            --label "io.containers.autoupdate=registry" \
            --pull missing \
            -u root \
            -e GOLLUM_AUTHOR_USERNAME=s-fairchild \
            -e GOLLUM_AUTHOR_EMAIL=steve51516@gmail.com \
            -p 4567:4567 \
            -v gollumwiki:/wiki \
            docker.io/gollumwiki/gollum:master \
                --mathjax \
                --mermaid \
                --emoji \
                --user-icons \
                --default-keybinding vim \
                --allow-uploads page
        ExecStop=/usr/bin/podman stop \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id
        ExecStopPost=/usr/bin/podman rm \
            -f \
            --ignore -t 10 \
            --cidfile=%t/%n.ctr-id

        [Install]
        WantedBy=multi-user.target

    - name: cleanup-motion-videos.service
      enabled: false
      contents: |
        [Unit]
        Description=Delete motion video files older than 30 days
        Wants=cleanup-motion-videos.timer
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        ExecStart=find /var/data/motionplus -name "*.mkv" -type f -mtime +30 -delete

        [Install]
        WantedBy=multi-user.target
    
    - name: jellyfin-uploads.service
      enabled: false
      contents: |
        [Unit]
        Description=Delete motion video files older than 30 days
        Wants=cleanup-motion-videos.timer
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        ExecStart=find /var/data/jellyfin/uploads/ -name "*.mp4" -type f -exec mv -t /var/data/jellyfin/Mixed/ {} +

        [Install]
        WantedBy=multi-user.target

    - name: jellyfin-uploads.timer
      enabled: true
      contents: |
        [Unit]
        Description=Triggers cleanup-motion-videos.service to delete videos older than 30 days
        Requires=cleanup-motion-videos.service
        After=network-online.target
        Wants=network-online.target

        [Timer]
        Unit=jellyfin-uploads.service
        OnUnitActiveSec=15min
        OnBootSec=10min
        OnUnitActiveSec=15min
        OnCalendar=*:0/15

        [Install]
        WantedBy=timers.target
    
    - name: cleanup-motion-videos.timer
      enabled: true
      contents: |
        [Unit]
        Description=Triggers cleanup-motion-videos.service to delete videos older than 30 days
        Requires=cleanup-motion-videos.service
        After=network-online.target
        Wants=network-online.target

        [Timer]
        OnBootSec=30min
        OnUnitActiveSec=15min
        Unit=cleanup-motion-videos.service
        OnCalendar=*-*-* 00:00:00

        [Install]
        WantedBy=timers.target
  
    # Init services. Runs one time on first boot.
    - name: git-server-init.service
      enabled: true
      contents: |
        [Unit]
        Description=Initializes bare git repositories to serve as remote repositories
        After=network-online.target
        Wants=network-online.target

        [Service]
        User=git
        Group=git
        WorkingDirectory=/home/git
        Type=simple
        ExecStart=/usr/local/bin/git-server-init.sh -d /var/data/git/obsidian.git

        [Install]
        WantedBy=multi-user.target

    - name: podman-secrets.service
      enabled: true
      contents: |
        [Unit]
        Description=Create podman secrets
        After=network-online.target
        Wants=network-online.target
        Before=motionplus.service
        Before=v4l2rtspserver.service
        Before=pihole.service
        Before=graylog.service

        [Service]
        WorkingDirectory=/tmp
        Type=simple
        ExecStart=/usr/local/bin/create_podman_secrets.sh

        [Install]
        WantedBy=multi-user.target
      
    - name: podman-auto-update.timer
      enabled: true
    - name: openvpn-server@serverudp.service
      enabled: true
    - name: openvpn-server@servertcp.service
      enabled: true
      
      # Install admin tools
      # `--allow-inactive` ensures that rpm-ostree does not return an error
      # We run before `zincati.service` to avoid conflicting rpm-ostree
      # transactions.
      # if the package is already installed. This is useful if the package is
      # added to the root image in a future Fedora CoreOS release as it will
      # prevent the service from failing.
      # Restart policy is to try again later if another rpm-ostree deployment is active
    - name: rpm-ostree-install-pkgs.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer vim with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Restart=on-failure
        RestartSec=60
        ExecStart=/usr/bin/rpm-ostree install -y --apply-live --allow-inactive \
            vim htop screen iotop openvpn
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target

storage:
  disks:
  - device: /dev/disk/by-id/coreos-boot-disk
    wipe_table: false
    partitions:
    - number: 4
      label: root
      size_mib: 8192
      resize: true
    - size_mib: 0
      label: containers
  filesystems:
    - path: /var/lib/containers
      device: /dev/disk/by-partlabel/containers
      format: btrfs
      with_mount_unit: true

  links:
    - path: /home/git/obsidian.git
      target: /var/data/git/obsidian.git

    - path: /home/steven/motionplus
      target: /var/data/motionplus

  directories:
    - path: /var/data
      user:
        name: root
      group:
        name: root
      mode: 0755
  
    - path: /var/data/elastic/kibana
    - path: /var/data/elastic/elasticsearch

    - path: /var/data/git
      user:
        name: git
      group:
        name: git
      mode: 0700

    - path: /var/data/motionplus
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/motionplus/frontdoor
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/motionplus/bedroom1
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/motionplus/driveway
      user: 
        name: root
      group: 
        name: cctv

    - path: /var/data/jellyfin
      user:
        name: root
      group:
        name: movies

    - path: /var/data/jellyfin/uploads
      user:
        name: steven
      group:
        name: movies

    - path: /var/data/jellyfin/Movies
      user:
        name: root
      group:
        name: movies
      mode: 0755

    - path: /var/data/jellyfin/TV
      user:
        name: root
      group:
        name: movies
      mode: 0755

    - path: /var/data/jellyfin/Mixed
      user:
        name: root
      group:
        name: movies
      mode: 0755

    - path: /var/data/deja/r10
      user:
        name: steven
      group:
        name: steven
      mode: 0700

    - path: /var/data/deja/g15
      user:
        name: steven
      group:
        name: steven
      mode: 0700
    
    - path: /usr/local/etc/elastic

  files:
    - path: /usr/local/etc/elastic/elasticsearch.yml
      contents:
        local: elastic/elasticsearch.yml

    - path: /usr/local/bin/init_kibana.sh 
      contents:
        local: bin/init_kibana.sh
      mode: 0755

    - path: /usr/local/bin/git-server-init.sh
      contents:
        local: bin/git-server-init.sh
      user:
        name: git
      group:
        name: git
      mode: 0540

    # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_linux
    - path: /etc/sysctl.d/99-vm_max_map.conf
      mode: 0644
      contents:
        inline: |
          vm.max_map_count=262144

    - path: /etc/systemd/zram-generator.conf
      mode: 0644
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]
    
    - path: /var/container_secrets.tar
      overwrite: true
      contents:
        local: container_secrets.tar.gz
        compression: gzip

    # Used by podman-secrets.service
    - path: /usr/local/bin/create_podman_secrets.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/create_podman_secrets.sh
    
    # Used by motion to copy secrets into temp config
    - path: /usr/local/bin/motion_config_editor.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/motion_config_editor.sh
    
    # Used by v4l2rtspserver.servive
    - path: /usr/local/bin/start_v4l2rtspserver.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/start_v4l2rtspserver.sh

    # Ensure ELP usb camera is added for v4l2rtspserver
    - path: /etc/udev/rules.d/99-usb-cam.rules
      contents:
        inline: |
          KERNEL=="video[0-9]*", SUBSYSTEM=="video4linux", SUBSYSTEMS=="usb", ATTRS{idVendor}=="32e4", ATTRS{idProduct}=="9310", TAG+="systemd", ENV{SYSTEMD_WANTS}="v4l2rtspserver.service"
    
    - path: /etc/udev/rules.d/50-usb_power_save.rules
      contents:
        inline: |
          # blacklist for usb autosuspend
          ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="32e4", ATTR{idProduct}=="9310", GOTO="power_usb_rules_end"

          ACTION=="add", SUBSYSTEM=="usb", TEST=="power/control", ATTR{power/control}="auto"
          LABEL="power_usb_rules_end"

    - path: /etc/profile.d/zz-default-editor.sh
      overwrite: true
      contents:
        inline: |
          export EDITOR=vim

    - path: /usr/local/etc/graylog/.env
      mode: 0600
      contents:
        local: graylog/.env
    
    - path: /usr/local/bin/check_podman_network.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/check_podman_network.sh
    
    # Motion config files
    - path: /usr/local/etc/motionplus/motionplus.conf
      overwrite: true
      contents:
        local: motionplus/motionplus.conf
      mode: 0644

    - path: /usr/local/etc/motionplus/camera1.conf
      overwrite: true
      contents:
        local: motionplus/camera1.conf
      mode: 0644

    - path: /usr/local/etc/motionplus/camera2.conf
      overwrite: true
      contents:
        local: motionplus/camera2.conf
      mode: 0644

    - path: /usr/local/etc/motionplus/camera3.conf
      overwrite: true
      contents:
        local: motionplus/camera3.conf
      mode: 0644
    
    - path: /usr/local/etc/unbound/unbound.conf
      overwrite: true
      contents:
        local: unbound/unbound.conf
      mode: 0644
    
    # Beats config files
    - path: /usr/local/etc/journalbeat.yml
      overwrite: true
      mode: 0644
      contents:
        local: beats/journalbeat.yml
    
    - path: /usr/local/etc/metricbeat.yml
      overwrite: true
      mode: 0644
      contents:
        local: beats/metricbeat.yml

    # Openvpn config files
    - path: /etc/openvpn/server/keys/ca.key
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/ca.key

    - path: /etc/openvpn/server/keys/ca.crt
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/ca.crt

    - path: /etc/openvpn/server/keys/kore.key
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/kore.key

    - path: /etc/openvpn/server/keys/dh.pem
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/dh.pem

    - path: /etc/openvpn/server/serverudp.conf
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/server/serverudp.conf
    
    - path: /etc/openvpn/server/servertcp.conf
      overwrite: true
      contents:
        local: openvpn/server/servertcp.conf

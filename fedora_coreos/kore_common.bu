variant: fcos
version: 1.4.0
kernel_arguments:
  should_exist:
    - usbcore.autosuspend=5
passwd:
  groups:
    - name: backups
    - name: cctv
    - name: movies
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILKn4SiC50J4Yre5jcFdLvXH1VaNoW1ko5ng8nT/ZxAA steven@rh-thinkpad-p1
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILPKVaSQZMv4JXoV66CP2jBaoanPBwiO2NOYwFdgqmVV steven@G15
    - name: deja
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
      groups:
        - backups
    - name: steven
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBJ0MSYF8SY9eZoGKe1rhPvrm58FiMxQMJf69WEeBUTn steve51516@gmail.com
      groups:
        - backups
        - cctv
        - movies
    - name: motion
      home_dir: /var/data/motion
      no_create_home: true
      system: true
      gecos: Motion Camera System Account
      # groups:
        # - video
    - name: emby
      uid: 1003
      groups:
        - movies
      system: true
    - name: plex
      system: true
    - name: pihole
      system: true
storage:
  directories:
    - path: /var/data/motion
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/motion/frontdoor
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/motion/dustins_room
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/motion/driveway
      user: 
        name: motion
      group: 
        name: cctv
    - path: /var/data/emby
      user:
        name: emby
      group:
        name: movies
    - path: /var/data/plex
      user:
        name: plex
      group:
        name: movies
    - path: /var/data/emby/Movies
      user:
        name: emby
      group:
        name: movies
      mode: 0770
    - path: /var/data/emby/TV
      user:
        name: emby
      group:
        name: movies
      mode: 0770
    - path: /var/data/emby/Mixed
      user:
        name: emby
      group:
        name: movies
      mode: 0770
    - path: /var/data/deja/r10
      user:
        name: deja
      group:
        name: backups
      mode: 0770
    - path: /var/container_secrets
      user:
        name: root
      group:
        name: root
      mode: 0700

  files:
    # System config
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          kore

    - path: /etc/sysctl.d/99-vm_max_map.conf
      mode: 0644
      contents:
        inline: |
          vm.max_map_count=262144

    - path: /etc/systemd/zram-generator.conf
      mode: 0644
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]

    - path: /var/container_secrets/v4l2rtspserver
      overwrite: true
      contents:
        local: container_secrets/v4l2rtspserver

    - path: /var/container_secrets/v4l2rtspserver_camera1_url
      overwrite: true
      contents:
        local: container_secrets/v4l2rtspserver_camera1_url

    - path: /var/container_secrets/v4l2rtspserver_camera2_url
      overwrite: true
      contents:
        local: container_secrets/v4l2rtspserver_camera2_url

    - path: /var/container_secrets/v4l2rtspserver_camera3_url
      overwrite: true
      contents:
        local: container_secrets/v4l2rtspserver_camera3_url

    - path: /var/container_secrets/pihole
      overwrite: true
      contents:
        local: container_secrets/pihole

    - path: /var/container_secrets/motion_camera1
      overwrite: true
      contents:
        local: container_secrets/motion_camera1

    - path: /var/container_secrets/motion_camera2
      overwrite: true
      contents:
        local: container_secrets/motion_camera2

    - path: /var/container_secrets/motion_camera3
      overwrite: true
      contents:
        local: container_secrets/motion_camera3

    - path: /var/container_secrets/plex
      overwrite: true
      contents:
        local: container_secrets/plex

    - path: /var/container_secrets/graylog
      overwrite: true
      contents:
        local: container_secrets/graylog

    - path: /var/container_secrets/graylog_root_password_sha2
      overwrite: true
      contents:
        local: container_secrets/graylog_root_password_sha2

    # Used by podman-secrets.service
    - path: /usr/local/bin/create_podman_secrets.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/create_podman_secrets.sh
    
    # Used by motion to copy secrets into temp config
    - path: /usr/local/bin/motion_config_editor.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/motion_config_editor.sh
    
    # Used by v4l2rtspserver.servive
    - path: /usr/local/bin/start_v4l2rtspserver.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/start_v4l2rtspserver.sh

    # Ensure ELP usb camera is added for v4l2rtspserver
    - path: /etc/udev/rules.d/99-usb-cam.rules
      contents:
        inline: |
          KERNEL=="video0", SYMLINK="usbcam0", TAG+="systemd", ENV{SYSTEMD_WANTS}="v4l2rtspserver.service"
    
    - path: /etc/udev/rules.d/50-usb_power_save.rules
      contents:
        inline: |
          # blacklist for usb autosuspend
          ACTION=="add", SUBSYSTEM=="usb", ATTR{idVendor}=="32e4", ATTR{idProduct}=="9310", GOTO="power_usb_rules_end"

          ACTION=="add", SUBSYSTEM=="usb", TEST=="power/control", ATTR{power/control}="auto"
          LABEL="power_usb_rules_end"

    # User configs
    - path: /etc/profile.d/zz-default-editor.sh
      overwrite: true
      contents:
        inline: |
          export EDITOR=vim

    # App configs
    - path: /usr/local/etc/motion/motion.conf
      overwrite: true
      contents:
        local: motion/motion.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera1.conf
      overwrite: true
      contents:
        local: motion/camera1.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera2.conf
      overwrite: true
      contents:
        local: motion/camera2.conf
      mode: 0644

    - path: /usr/local/etc/motion/camera3.conf
      overwrite: true
      contents:
        local: motion/camera3.conf
      mode: 0644
    
    - path: /usr/local/etc/unbound/unbound.conf
      overwrite: true
      contents:
        local: unbound/unbound.conf
      mode: 0644
    
    - path: /etc/wireguard/wg0.conf
      mode: 0600
      contents:
        local: wg/wg0.conf
    
    - path: /usr/local/etc/graylog/.env
      mode: 0600
      contents:
        local: graylog/.env
    
    - path: /usr/local/etc/journalbeat.yml
      overwrite: true
      mode: 0644
      contents:
        inline: |
          # https://www.elastic.co/guide/en/beats/journalbeat/7.10/journalbeat-reference-yml.html
          # fields_under_root: true
          # fields.collector_node_id: a71df949-e0ab-4dfe-97e5-5fb816b22c6e
          # fields.gl2_source_collector: 638a53f29f8e34641b42e4c9

          journalbeat.inputs:
          - paths: []

            # Position to start reading from journal. Valid values: head, tail, cursor
            seek: cursor
            # Fallback position if no cursor data is available.
            cursor_seek_fallback: head

          output.logstash:
            # Boolean flag to enable or disable the output module.
            enabled: true

            # Graylog host and the beats input
            hosts: ["127.0.0.1:5044"]

            # Number of workers per Graylog host.
            worker: 1

            # Set gzip compression level.
            compression_level: 0

            # Configure escaping HTML symbols in strings.
            #escape_html: false

            # If enabled only a subset of events in a batch of events is transferred per
            # transaction.  The number of events to be sent increases up to `bulk_max_size`
            # if no error is encountered.
            slow_start: true
    
    - path: /usr/local/etc/metricbeat.yml
      overwrite: true
      mode: 0644
      contents:
        inline: |
          # https://www.elastic.co/guide/en/beats/metricbeat/7.10/metricbeat-reference-yml.html
          metricbeat.config:
            modules:
              path: ${path.config}/modules.d/*.yml
              # Reload module configs as they change:
              reload.enabled: false

          metricbeat.autodiscover:
            providers:
              - type: docker
                hints.enabled: true

          #==========================  Modules configuration =============================#
          metricbeat.modules:

          #-------------------------------- System Module --------------------------------#
          - module: system
            metricsets:
              - cpu             # CPU usage
              - load            # CPU load averages
              - memory          # Memory usage
              - network         # Network IO
              - process         # Per process metrics
              - process_summary # Process summary
              - uptime          # System Uptime
              - socket_summary  # Socket summary
              - core           # Per CPU core usage
              - diskio         # Disk IO
              - filesystem     # File system usage for each mountpoint
              - fsstat         # File system summary metrics
              #- raid           # Raid
              - socket         # Sockets and connection info (linux only)
              - service        # systemd service information
            enabled: true
            period: 10s
            processes: ['.*']
            # Configure the metric types that are included by these metricsets.
            cpu.metrics:  ["percentages","normalized_percentages"]  # The other available option is ticks.
            core.metrics: ["percentages"]  # The other available option is ticks.

          #--------------------------------- Beat Module ---------------------------------#
          - module: beat
            metricsets:
              - stats
              - state
            period: 10s
            hosts: ["http://127.0.0.1:5044"]
            #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

            # Set to true to send data collected by module to X-Pack
            # Monitoring instead of metricbeat-* indices.
            #xpack.enabled: false

          #-------------------------------- Docker Module --------------------------------#
          - module: docker
            metricsets:
              - "container"
              - "cpu"
              - "diskio"
              - "event"
              - "healthcheck"
              - "info"
              #- "image"
              - "memory"
              - "network"
            hosts: ["unix:///var/run/docker.sock"]
            period: 10s
            enabled: true

          processors:
            - add_cloud_metadata: ~

          output.logstash:
            hosts: ["127.0.0.1:5044"]

    - path: /usr/local/bin/check_podman_network.sh
      overwrite: true
      mode: 0700
      contents:
        local: bin/check_podman_network.sh
    
    - path: /etc/openvpn/server/keys/ca.key
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/ca.key

    - path: /etc/openvpn/server/keys/ca.crt
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/ca.crt

    - path: /etc/openvpn/server/keys/kore.key
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/kore.key

    - path: /etc/openvpn/server/keys/dh.pem
      overwrite: true
      mode: 0600
      contents:
        local: openvpn/keys/dh.pem

    - path: /etc/openvpn/server/serverudp.conf
      overwrite: true
      mode: 0600
      contents:
        inline: |
          ########################################
          # Sample OpenVPN config file for
          # 2.0-style multi-client udp server
          #
          # Adapted from http://openvpn.sourceforge.net/20notes.html
          #
          # tun-style tunnel

          port 1194
          dev tun

          # Use "local" to set the source address on multi-homed hosts
          #local [IP address]

          # TLS parms
          tls-server 
          ca keys/ca.crt
          cert keys/kore.crt
          key keys/kore.key
          dh keys/dh.pem

          # Tell OpenVPN to be a multi-client udp server
          mode server

          # proto tcp-server
          comp-lzo
          # tcp-queue-limit 256
          tcp-queue-limit 1024
          bcast-buffers 1024

          # The server's virtual endpoints
          ifconfig 10.9.0.1 10.9.0.2

          # Pool of /30 subnets to be allocated to clients.
          # When a client connects, an --ifconfig command
          # will be automatically generated and pushed back to
          # the client.
          ifconfig-pool 10.9.0.4 10.9.0.255

          # Push route to client to bind it to our local
          # virtual endpoint.
          push "route 10.9.0.1 255.255.255.255"

          # Push any routes the client needs to get in
          # to the local network.
          push "route 10.50.0.0 255.255.255.0"

          # Push DHCP options to Windows clients.
          # push "dhcp-option DOMAIN example.com"
          push "dhcp-option DNS 10.50.0.1"
          # push "dhcp-option WINS 192.168.0.1"

          # Client should attempt reconnection on link
          # failure.
          keepalive 10 60

          # Delete client instances after some period
          # of inactivity.
          inactive 600

          # Route the --ifconfig pool range into the
          # OpenVPN server.
          route 10.9.0.0 255.255.255.0

          # The server doesn't need privileges
          user openvpn
          group openvpn

          # Keep TUN devices and keys open across restarts.
          persist-tun
          persist-key

          verb 4
    
    - path: /etc/openvpn/server/servertcp.conf
      overwrite: true
      contents:
        inline: |
          # Sample OpenVPN config file for
          # 2.0-style multi-client udp server
          #
          # Adapted from http://openvpn.sourceforge.net/20notes.html
          #
          # tun-style tunnel

          port 1194
          dev tun

          # Use "local" to set the source address on multi-homed hosts
          #local [IP address]

          # TLS parms
          tls-server 
          ca keys/ca.crt
          cert keys/kore.crt
          key keys/kore.key
          dh keys/dh.pem

          # Tell OpenVPN to be a multi-client udp server
          mode server

          proto tcp-server

          comp-lzo
          # tcp-queue-limit 256
          tcp-queue-limit 1024
          bcast-buffers 1024

          # The server's virtual endpoints
          ifconfig 10.8.0.1 10.8.0.2

          # Pool of /30 subnets to be allocated to clients.
          # When a client connects, an --ifconfig command
          # will be automatically generated and pushed back to
          # the client.
          ifconfig-pool 10.8.0.4 10.8.0.255

          # Push route to client to bind it to our local
          # virtual endpoint.
          push "route 10.8.0.1 255.255.255.255"

          # Push any routes the client needs to get in
          # to the local network.
          push "route 10.50.0.0 255.255.255.0"

          # Push DHCP options to Windows clients.
          # push "dhcp-option DOMAIN example.com"
          push "dhcp-option DNS 10.50.0.1"
          # push "dhcp-option WINS 192.168.0.1"

          # Client should attempt reconnection on link
          # failure.
          keepalive 10 60

          # Delete client instances after some period
          # of inactivity.
          inactive 600

          # Route the --ifconfig pool range into the
          # OpenVPN server.
          route 10.8.0.0 255.255.255.0

          # The server doesn't need privileges
          user openvpn
          group openvpn

          # Keep TUN devices and keys open across restarts.
          persist-tun
          persist-key

          verb 4

  # Required to use local dns server
  # links:
  #   - path: /etc/resolv.conf
  #     overwrite: true
  #     user:
  #       id: 0
  #     group:
  #       id:
  #         0
  #     target: /etc/resolv.conf.local-dns

systemd:
  units:
    - name: podman-secrets.service
      enabled: true
      contents: |
        [Unit]
        Description=Create podman secrets
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/create_podman_secrets.sh

        [Install]
        WantedBy=multi-user.target
      
    - name: plex.service
      enabled: false
      contents: |
        [Unit]
        Description=Plex Media Server
        After=network-online.target
        Wants=network-online.target

        # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
        # https://hub.docker.com/r/linuxserver/plex
        # https://hub.docker.com/r/plexinc/pms-docker/
        [Service]
        Type=simple
        TimeoutStartSec=0
        RestartSec=30
        Restart=on-failure
        ExecStartPre=-/bin/podman pull docker.io/linuxserver/plex:latest
        ExecStartPre=-/bin/podman kill plex
        ExecStartPre=-/bin/podman rm plex
          # Optional ports, read linked docs for usage
          # -p 32400:32400 \
          # -p 1900:1900/udp \
          # -p 3005:3005 \
          # -p 5353:5353/udp \
          # -p 8324:8324 \
          # -p 32410:32410/udp \
          # -p 32412:32412/udp \
          # -p 32413:32413/udp \
          # -p 32414:32414/udp \
          # -p 32469:32469
                # --device /dev/dri:/dev/dri \
                # -e PLEX_CLAIM="<claimToken>" \
        ExecStart=/bin/podman run \
                --name plex \
                --secret plex \
                --device /dev/dri:/dev/dri \
                -e PUID=1000 \
                -e PGID=1000 \
                -p 32400:32400/tcp \
                -e TZ="America/New_York" \
                -e FILE__PASSWORD=/run/secrets/plex \
                -e VERSION=docker \
                -h plex.kore \
                -v plex_config:/config \
                --mount type=tmpfs,tmpfs-size=1G,destination=/transcode \
                -v /var/data/plex:/data \
                docker.io/linuxserver/plex:latest
        ExecStop=/bin/podman stop plex

        [Install]
        WantedBy=multi-user.target

    - name: emby.service
      enabled: true
      contents: |
        [Unit]
        Description=Emby Media Server
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        TimeoutStartSec=0
        RestartSec=30
        Restart=on-failure
        ExecStartPre=-/bin/podman pull docker.io/linuxserver/emby:latest
        ExecStartPre=-/bin/podman kill emby
        ExecStartPre=-/bin/podman rm emby
        ExecStart=/bin/podman run \
                --name emby \
                --device /dev/dri:/dev/dri \
                -v emby_config:/config \
                -v /var/data/emby/Movies:/mnt/Movies:Z \
                -v /var/data/emby/TV:/mnt/TV:Z \
                -v /var/data/emby/Mixed:/mnt/Mixed:Z \
                -p 8096:8096 \
                -e UID=1003 \
                -e GID=1002 \
                -e GIDLIST=100 \
                docker.io/linuxserver/emby:latest
        ExecStop=/bin/podman stop emby

        [Install]
        WantedBy=multi-user.target
    
    - name: motion.service
      enabled: true
      contents: |
        [Unit]
        Description=Motion Video Server
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        TimeoutStartSec=0
        RestartSec=30
        Restart=on-failure
        ExecStartPre=-/bin/podman pull docker.io/bash:5.2.2

        ExecStartPre=/bin/podman run --rm \
            --name motion-config-editor \
            --pull newer \
            --secret motion_camera1,type=env \
            --secret motion_camera2,type=env \
            --secret motion_camera3,type=env \
            --secret v4l2rtspserver_camera1_url,type=env \
            --secret v4l2rtspserver_camera2_url,type=env \
            --secret v4l2rtspserver_camera3_url,type=env \
            --device /dev/dri:/dev/dri \
            -v /var/usrlocal/etc/motion:/mnt/motion:Z \
            -v motion_config:/mnt/temp_config \
            -v /var/usrlocal/bin/motion_config_editor.sh:/bin/motion_config_editor.sh:Z \
            docker.io/bash:5.2.2 bash /bin/motion_config_editor.sh

        ExecStartPre=-/bin/podman pull docker.io/motionproject/motion:latest
        ExecStartPre=-/bin/podman kill motion
        ExecStartPre=-/bin/podman rm motion
        ExecStart=/bin/podman run \
            --name motion \
            -e TZ="America/New_York" \
            -v motion_config:/usr/local/etc/motion \
            -v /var/data/motion:/var/lib/motion:Z \
            docker.io/motionproject/motion:latest
        ExecStop=/bin/podman stop motion
        ExecStopPost=/bin/podman volume rm motion_config

        [Install]
        WantedBy=multi-user.target
    
    - name: cleanup-motion-videos.service
      enabled: false
      contents: |
        [Unit]
        Wants=cleanup-motion-videos.timer

        [Service]
        Type=oneshot
        ExecStart=find /var/data/motion -name "*.mkv" -type f -mtime +30 -delete

        [Install]
        WantedBy=multi-user.target
    
    - name: cleanup-motion-videos.timer
      enabled: true
      contents: |
        [Unit]
        Description=Delete motion video files older than 30 days
        Requires=cleanup-motion-videos.service

        [Timer]
        Unit=cleanup-motion-videos.service
        OnCalendar=*-*-* 00:00:00

        [Install]
        WantedBy=timers.target

    - name: pihole.service
      enabled: false
      contents: |
        [Unit]
        Description=Pihole DNS Server
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=simple
        TimeoutStartSec=0
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman pull docker.io/pihole/pihole:latest
        ExecStartPre=-/bin/podman kill pihole
        ExecStartPre=-/bin/podman rm pihole
            # TODO script password creation volume similar to motion
            # --secret pihole,target=ADMIN_PASSWORD \
            # -e WEBPASSWORD="${ADMIN_PASSWORD}" \
        ExecStart=/bin/podman run \
            --name pihole \
            -e TZ="America/New_York" \
            -v pihole-etc:/etc/pihole \
            -v pihole-dnsmasq.d:/etc/dnsmasq.d \
            -v pihole-log:/var/log \
            --dns 127.0.0.1 \
            --dns 1.1.1.1 \
            --hostname pi.hole \
            -e VIRTUAL_HOST=pi.hole \
            -e PROXY_LOCATION=pi.hole \
            -e ServerIP=10.50.0.1 \
            -p 53:53/udp \
            -p 53:53/tcp \
            -p 8080:80 \
            docker.io/pihole/pihole:latest
        ExecStop=/bin/podman stop pihole

        [Install]
        WantedBy=multi-user.target

    # Used as upstream dns for pihole
    - name: unbound.service
      enabled: false
      contents: |
        [Unit]        
        Description=Unbound DNS Server
        After=network.target

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStart=/bin/podman run \
            --name unbound \
            --pull newer \
            -p 5353:53/tcp \
            -p 5353:53/udp \
            --restart=unless-stopped \
            docker.io/mvance/unbound:latest
        
        [Install]
        WantedBy=multi-user.target
  
    - name: v4l2rtspserver.service
      enabled: true
      contents: |
        [Unit]
        Description=V4L2 RTSP Server
        After=network.target
        BindsTo=sys-devices-pci0000:00-0000:00:14.0-usb1-1\x2d2-1\x2d2.3-1\x2d2.3:1.0-video4linux-video0.device
        After=sys-devices-pci0000:00-0000:00:14.0-usb1-1\x2d2-1\x2d2.3-1\x2d2.3:1.0-video4linux-video0.device

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman kill v4l2rtspserver
        ExecStartPre=-/bin/podman rm v4l2rtspserver
        ExecStartPre=-/bin/podman pull docker.io/mpromonet/v4l2rtspserver:latest-amd64

        # Entrypoint is replaced with bash -c bin/start_v4l2rtspserver.sh to allow use of podman secrets in entrypoint
        ExecStart=/bin/podman run \
                      --name v4l2rtspserver \
                      --secret v4l2rtspserver,type=env,target=SECRET \
                      --secret v4l2rtspserver_url,type=env,target=URL \
                      --device /dev/usbcam0:/dev/video0 \
                      --device /dev/snd:/dev/snd \
                      -v /var/usrlocal/bin/start_v4l2rtspserver.sh:/usr/local/bin/start_v4l2rtspserver.sh \
                      -p 8554:8554/tcp \
                      -p 8554:8554/udp \
                      --entrypoint "/bin/bash" \
                      docker.io/mpromonet/v4l2rtspserver:latest-amd64 \
                      -c "/usr/local/bin/start_v4l2rtspserver.sh"
        ExecStop=/bin/podman stop v4l2rtspserver

        [Install]
        WantedBy=multi-user.target
    
    # TODO finish nginx reverse proxy setup
    - name: nginx.service
      enabled: false
      contents: |
        [Unit]

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman kill nginx
        ExecStartPre=-/bin/podman rm nginx
        ExecStart=podman run \
                      --pull newer \
                      -p 8080:80 \
                      -p 443:443 \
                      registry.access.redhat.com/ubi9/nginx-120:1-75

        [Install]
        WantedBy=multi-user.target
    
    - name: graylog.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        After=mongodb.service
        After=elasticsearch.service

        [Service]
        Type=simple
        Restart=always
        RestartSec=30
        ExecStartPre=/usr/local/bin/check_podman_network.sh graylog
        ExecStartPre=-/bin/podman pull docker.io/graylog/graylog:4.3
        ExecStartPre=-/bin/podman kill graylog
        ExecStartPre=-/bin/podman rm graylog

        ExecStart=/bin/podman run --name=graylog \
                                  --secret graylog,type=env,target=GRAYLOG_PASSWORD_SECRET \
                                  --secret graylog_root_password_sha2,type=env,target=GRAYLOG_ROOT_PASSWORD_SHA2 \
                                  -e "GRAYLOG_NODE_ID_FILE=/usr/share/graylog/data/config/node-id" \
                                  -e "GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:9000" \
                                  -e "GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/" \
                                  -e "GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200" \
                                  -e "GRAYLOG_MONGODB_URI=mongodb://mongodb:27017/graylog" \
                                  -v graylog_data:/usr/share/graylog/data \
                                  -v "graylog_journal:/usr/share/graylog/data/journal" \
                                  --net graylog \
                                  --network-alias "graylog" \
                                  -p 9000:9000 \
                                  -p 1514:1514 \
                                  -p 1514:1514/udp \
                                  -p 12201:12201 \
                                  -p 12201:12201/udp \
                                  -p 5044:5044/tcp \
                                  -p 5140:5140/udp \
                                  -p 5140:5140/tcp \
                                  -p 13301:13301/tcp \
                                  -p 5555:5555/tcp \
                                  -p 5555:5555/udp \
                                  -p 13302:13302/tcp \
                                  --entrypoint '["/usr/bin/tini", "--", "wait-for-it", "elasticsearch:9200", "--", "/docker-entrypoint.sh"]' \
                                  docker.io/graylog/graylog:4.3

        [Install]
        WantedBy=multi-user.target

    - name: mongodb.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Before=graylog.service

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=/usr/local/bin/check_podman_network.sh graylog
        ExecStartPre=-/bin/podman pull docker.io/mongo:5.0
        ExecStartPre=-/bin/podman kill mongo
        ExecStartPre=-/bin/podman rm mongo

        ExecStart=/bin/podman run --name=mongo \
                                  -v graylog_mongo_data:/data/db \
                                  --net graylog \
                                  --network-alias mongodb \
                                  docker.io/mongo:5.0

        [Install]
        WantedBy=multi-user.target
    
    - name: elasticsearch.service
      enabled: true
      contents: |
        [Unit]
        After=network.target
        Before=graylog.service

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=/usr/local/bin/check_podman_network.sh graylog
        ExecStartPre=-/bin/podman pull docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
        ExecStartPre=-/bin/podman kill elasticsearch
        ExecStartPre=-/bin/podman rm elasticsearch

        ExecStart=/bin/podman run --name=elasticsearch \
                                  -e http.host=0.0.0.0 \
                                  -e transport.host=localhost \
                                  -e network.host=0.0.0.0 \
                                  -e ES_JAVA_OPTS="-Dlog4j2.formatMsgNoLookups=true -Xms2048m -Xmx2048m" \
                                  -v graylog_es_data:/usr/share/elasticsearch/ \
                                  --net graylog \
                                  --network-alias elasticsearch \
                                  -p 9200:9200 \
                                  --ulimit memlock=-1:-1 \
                                  -m 4g \
                                  docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2

        [Install]
        WantedBy=multi-user.target

    - name: metricbeat.service
      enabled: true
      contents: |
        [Unit]
        After=network.target

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman kill metricbeat
        ExecStartPre=-/bin/podman rm metricbeat
        ExecStart=/bin/podman run --name metricbeat \
                          --pull newer \
                          -v /usr/local/etc/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro \
                          -v /var/run/docker.sock:/var/run/docker.sock:ro \
                          -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:ro \
                          -v /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro \
                          -v /proc:/hostfs/proc:ro \
                          -v /:/hostfs:ro \
                          --net=host \
                          --cap-add sys_ptrace \
                          --cap-add dac_read_search \
                          docker.elastic.co/beats/metricbeat-oss:7.10.2 \
                          -e -system.hostfs=/hostfs

        [Install]
        WantedBy=multi-user.target

    - name: journalbeat.service
      enabled: true
      contents: |
        [Unit]
        After=network.target

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman kill journalbeat
        ExecStartPre=-/bin/podman rm journalbeat
        ExecStart=/bin/podman run --name=journalbeat \
                          --pull newer \
                          -v /usr/local/etc/journalbeat.yml:/usr/share/journalbeat/journalbeat.yml:ro \
                          -v /var/log/journal:/var/log/journal:ro \
                          -v /etc/machine-id:/etc/machine-id:ro \
                          -v /run/systemd:/run/systemd:ro \
                          -v /etc/hostname:/etc/hostname:ro \
                          docker.elastic.co/beats/journalbeat-oss:7.10.2 \
                          journalbeat -e -strict.perms=false

        [Install]
        WantedBy=multi-user.target
    
    - name: gollum.service
      enabled: true
      contents: |
        [Unit]
        After=network.target

        [Service]
        Type=simple
        Restart=on-failure
        RestartSec=30
        ExecStartPre=-/bin/podman kill gollum
        ExecStartPre=-/bin/podman rm gollum
        ExecStartPre=-/bin/podman pull docker.io/gollumwiki/gollum:master
        ExecStart=/bin/podman run \
                              --name gollum \
                              -u root \
                              -e GOLLUM_AUTHOR_USERNAME=s-fairchild \
                              -e GOLLUM_AUTHOR_EMAIL=steve51516@gmail.com \
                              -p 4567:4567 \
                              -v gollumwiki:/wiki \
                              docker.io/gollumwiki/gollum:master \
                              --mathjax \
                              --mermaid \
                              --emoji \
                              --user-icons \
                              --default-keybinding vim \
                              --allow-uploads page

        [Install]
        WantedBy=multi-user.target

    - name: wg-quick@wg0.service
      enabled: false
    - name: openvpn-server@serverudp.service
      enabled: true
    - name: openvpn-server@servertcp.service
      enabled: true
      
      # Install admin tools
      # `--allow-inactive` ensures that rpm-ostree does not return an error
      # We run before `zincati.service` to avoid conflicting rpm-ostree
      # transactions.
      # if the package is already installed. This is useful if the package is
      # added to the root image in a future Fedora CoreOS release as it will
      # prevent the service from failing.
      # Restart policy is to try again later if another rpm-ostree deployment is active
    - name: rpm-ostree-install-pkgs.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer vim with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Restart=on-failure
        RestartSec=60
        ExecStart=/usr/bin/rpm-ostree install -y --apply-live --allow-inactive \
            vim htop screen iotop openvpn # podman-compose
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target

- name: Secure fresh Arch Linux Arm Install
  hosts: rpi4
  vars_files:
    - group_vars/env.yml
  become: true

  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: rpi4
        use: systemd

    - name: Create user account
      ansible.builtin.user:
        name: "{{ user }}"
        shell: '/bin/bash'
        expires: -1
        append: true
        groups:
          - wheel
          - power
          - audio
          - tty
          - video
          # - i2c
        generate_ssh_key: true

    - name: Add authorized ssh key for "{{ user }}"
      ansible.posix.authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ lookup('file', home + '/.ssh/id_rsa.pub') }}"
      tags: ssh-config
    
    - name: Do not allow password authentication to ssh
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication '
        insertafter: '^#PasswordAuthentication '
        line: PasswordAuthentication no
      tags: ssh-config
    
    - name: Restart sshd
      service:
        name: sshd
        state: restarted
      tags: ssh-config

    - name: Customize set aliases for root
      ansible.builtin.blockinfile:
        path: /root/.bashrc
        owner: root
        group: root
        mode: 0644
        create: true
        block: |
          alias ls='ls --color=auto'
          alias ll='ls -lhtr --color=auto'
      tags: shell-env

    - name: Customize bash profile for root
      ansible.builtin.blockinfile:
        path: /root/.bash_profile
        owner: root
        group: root
        mode: 0644
        create: true
        block: |
          # Get the aliases and functions
          if [ -f ~/.bashrc ]; then
              . ~/.bashrc
          fi
      tags: shell-env

    - name: Remove old PS1 variable for "{{ user }}"
      lineinfile:
        path: "{{ user_home }}/.bashrc"
        regexp: '^PS1='
        state: absent
    
    - name: Customize bash profile for "{{ user }}"
      ansible.builtin.blockinfile:
        path: "{{ user_home }}/.bash_profile"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0644
        create: true
        block: |
          # Get the aliases and functions
          if [ -f ~/.bashrc ]; then
              . ~/.bashrc
          fi
      tags: shell-env

    - name: Customize bash env for "{{ user }}"
      ansible.builtin.blockinfile:
        path: "{{ user_home }}/.bashrc"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0644
        create: true
        block: |
          PS1='[\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m]\$ '
          export PATH="${PATH}:$HOME/.local/bin:$HOME/bin:/usr/local/go/bin"
          alias ll='ls -lhtr --color=auto'
      tags: shell-env

    - name: Install sudo
      community.general.pacman:
        update_cache: yes
        pkg:
          - sudo
        extra_args: --needed
    
    - name: Install sudoers file
      ansible.builtin.copy:
        mode: '600'
        owner: root
        group: root
        content: "{{ user }} ALL=(ALL:ALL) NOPASSWD: ALL\n"
        dest: "/etc/sudoers.d/{{ user }}_nopasswd"
        force: true
        validate: visudo -csf %s

    # Switch logged in user from alarm to new user
    - name: switch to new user "{{ user }}"
      ansible.builtin.set_fact:
        current_user: "{{ user }}"
        ansible_user: "{{ user }}"

    - name: Remove default alarm user
      ansible.builtin.user:
        name: alarm
        state: absent
        remove: true
        force: true

    - name: Disable and lock root password
      ansible.builtin.user:
        name: root
        password: "!"
        password_lock: true

    